{
  "cd" = "z";
  ".." = "cd ..";
  "..." = "cd ../..";
  "...." = "cd ../../..";
  "ls" = "eza";
  "cat" = "bat";
  # GIT
  # Original: https://github.com/ohmyzsh/ohmyzsh/blob/master/plugins/git/git.plugin.zsh
  "ga" = "git add";
  "gaa" = "git add --all";
  "gb" = "git branch";
  "gba" = "git branch --all";
  "gbd" = "git branch --delete";
  "gbda" = "git branch --no-color --merged | command grep -vE \"^([+*]|\s*($(git_main_branch)|$(git_develop_branch))\s*$)\" | command xargs git branch --delete 2>/dev/null";
  "gbD" = "git branch --delete --force";
  "gbgd" = "git branch --no-color -vv | grep \": gone\]\" | awk '\"'\"'{print $1}'\"'\"' | xargs git branch -d";
  "gc" = "git commit --verbose";
  "gc!" = "git commit --verbose --amend";
  "gcn!" = "git commit --verbose --no-edit --amend";
  "gca" = "git commit --verbose --all";
  "gca!" = "git commit --verbose --all --amend";
  "gcan!" = "git commit --verbose --all --no-edit --amend";
  "gcans!" = "git commit --verbose --all --signoff --no-edit --amend";
  "gcl" = "git clone --recurse-submodules";
  "gcmsg" = "git commit --message";
  "gcp" = "git cherry-pick";
  "gcpa" = "git cherry-pick --abort";
  "gcpc" = "git cherry-pick --continue";
  "gd" = "git diff";
  "gds" = "git diff --staged";
  "gdup" = "git diff @{upstream}";
  "gf" = "git fetch";
  "gfa" = "git fetch --all --prune --jobs=10";
  "gfo" = "git fetch origin";
  "glo" = "git log --oneline --decorate";
  "glol" = "git log --graph --pretty='%Cred%h%Creset -%C(auto)%d%Creset %s %Cgreen(%ar) %C(bold blue)<%an>%Creset'";
  "glods" = "git log --graph --pretty='%Cred%h%Creset -%C(auto)%d%Creset %s %Cgreen(%ad) %C(bold blue)<%an>%Creset' --date=short";
  "glog" = "git log --oneline --decorate --graph";
  "gloga" = "git log --oneline --decorate --graph --all";
  "gm" = "git merge";
  "gma" = "git merge --abort";
  "gms" = "git merge --squash";
  "gr" = "git remote";
  "gra" = "git remote add";
  "grb" = "git rebase";
  "grba" = "git rebase --abort";
  "grbc" = "git rebase --continue";
  "grbd" = "git rebase $(git_develop_branch)";
  "grbi" = "git rebase --interactive";
  "grbm" = "git rebase $(git_main_branch)";
  "grbom" = "git rebase origin/$(git_main_branch)";
  "grbo" = "git rebase --onto";
  "grbs" = "git rebase --skip";
  "grev" = "git revert";
  "grh" = "git reset";
  "grhh" = "git reset --hard";
  "groh" = "git reset origin/$(git_current_branch) --hard";
  "grm" = "git rm";
  "grmc" = "git rm --cached";
  "grs" = "git restore";
  "grset" = "git remote set-url";
  "grss" = "git restore --source";
  "grst" = "git restore --staged";
  "gsb" = "git status --short --branch";
  "gsh" = "git show";
  "gsps" = "git show --pretty=short --show-signature";
  "gss" = "git status --short";
  "gst" = "git status";
  "gsta" = "git stash push";
  "gstaa" = "git stash apply";
  "gstc" = "git stash clear";
  "gstd" = "git stash drop";
  "gstl" = "git stash list";
  "gstp" = "git stash pop";
  "gsts" = "git stash show --text";
  "gsu" = "git submodule update";
  "gsw" = "git switch";
  "gswc" = "git switch --create";
  "gswm" = "git switch $(git_main_branch)";
  "gswd" = "git switch $(git_develop_branch)";
  "gwt" = "git worktree";
  "gwta" = "git worktree add";
  "gwtls" = "git worktree list";
  "gwtmv" = "git worktree move";
  "gwtrm" = "git worktree remove";
  # Discarded
  # "g" = "git";
  # "gapa" = "git add --patch";
  # "gau" = "git add --update";
  # "gav" = "git add --verbose";
  # "gap" = "git apply";
  # "gapt" = "git apply --3way";
  # "gbg" = "git branch -vv | grep \": gone\]\"";
  # "gbgD" = "git branch --no-color -vv | grep \": gone\]\" | awk '\"'\"'{print $1}'\"'\"' | xargs git branch -D";
  # "gbl" = "git blame -b -w";
  # "gbnm" = "git branch --no-merged";
  # "gbr" = "git branch --remote";
  # "gbs" = "git bisect";
  # "gbsb" = "git bisect bad";
  # "gbsg" = "git bisect good";
  # "gbsr" = "git bisect reset";
  # "gbss" = "git bisect start";
  # "gcam" = "git commit --all --message";
  # "gcsm" = "git commit --signoff --message";
  # "gcas" = "git commit --all --signoff";
  # "gcasm" = "git commit --all --signoff --message";
  # "gcb" = "git checkout -b";
  # "gcf" = "git config --list";
  # "gclean" = "git clean --interactive -d";
  # "gpristine" = "git reset --hard && git clean --force -dfx";
  # "gcm" = "git checkout $(git_main_branch)";
  # "gcd" = "git checkout $(git_develop_branch)";
  # "gco" = "git checkout";
  # "gcor" = "git checkout --recurse-submodules";
  # "gcount" = "git shortlog --summary --numbered";
  # "gcs" = "git commit --gpg-sign";
  # "gcss" = "git commit --gpg-sign --signoff";
  # "gcssm" = "git commit --gpg-sign --signoff --message";
  # "gdca" = "git diff --cached";
  # "gdcw" = "git diff --cached --word-diff";
  # "gdct" = "git describe --tags $(git rev-list --tags --max-count=1)";
  # "gdt" = "git diff-tree --no-commit-id --name-only -r";
  # "gdw" = "git diff --word-diff";
  # "gfg" = "git ls-files | grep";
  # "ggpull" = "git pull origin \"$(git_current_branch)\"";
  # "ggpush" = "git push origin \"$(git_current_branch)\"";
  # "ggsup" = "git branch --set-upstream-to=origin/$(git_current_branch)";
  # "gpsup" = "git push --set-upstream origin $(git_current_branch)";
  # "gpsupf" = "git push --set-upstream origin $(git_current_branch) --force-with-lease --force-if-includes' ";
  # "ghh" = "git help";
  # "gignore" = "git update-index --assume-unchanged";
  # "gignored" = "git ls-files -v | grep \"^[[:lower:]]\"";
  # "gl" = "git pull";
  # "glg" = "git log --stat";
  # "glgp" = "git log --stat --patch";
  # "glgg" = "git log --graph";
  # "glgga" = "git log --graph --decorate --all";
  # "glgm" = "git log --graph --max-count=10";
  # "glols" = "git log --graph --pretty='%Cred%h%Creset -%C(auto)%d%Creset %s %Cgreen(%ar) %C(bold blue)<%an>%Creset' --stat";
  # "glod" = "git log --graph --pretty='%Cred%h%Creset -%C(auto)%d%Creset %s %Cgreen(%ad) %C(bold blue)<%an>%Creset'";
  # "glola" = "git log --graph --pretty='%Cred%h%Creset -%C(auto)%d%Creset %s %Cgreen(%ar) %C(bold blue)<%an>%Creset' --all";
  # "gmom" = "git merge origin/$(git_main_branch)";
  # "gmtl" = "git mergetool --no-prompt";
  # "gmtlvim" = "git mergetool --no-prompt --tool=vimdiff";
  # "gmum" = "git merge upstream/$(git_main_branch)";
  # "gp" = "git push";
  # "gpd" = "git push --dry-run";
  # "gpf" = "git push --force-with-lease --force-if-includes";
  # "gpf!" = "git push --force";
  # "gpoat" = "git push origin --all && git push origin --tags";
  # "gpod" = "git push origin --delete";
  # "gpr" = "git pull --rebase";
  # "gpu" = "git push upstream";
  # "gpv" = "git push --verbose";
  # "grmv" = "git remote rename";
  # "grrm" = "git remote remove";
  # "grt" = "cd \"$(git rev-parse --show-toplevel || echo .)\"";
  # "gru" = "git reset --";
  # "grup" = "git remote update";
  # "grv" = "git remote --verbose";
  # "gstu" = "gsta --include-untracked";
  # "gstall" = "git stash --all";
  # "gts" = "git tag --sign";
  # "gtv" = "git tag | sort -V";
  # "gunignore" = "git update-index --no-assume-unchanged";
  # "gunwip" = "git rev-list --max-count=1 --format=\"%s\" HEAD | grep -q \"\--wip--\" && git reset HEAD~1";
  # "gup" = "git pull --rebase";
  # "gupv" = "git pull --rebase --verbose";
  # "gupa" = "git pull --rebase --autostash";
  # "gupav" = "git pull --rebase --autostash --verbose";
  # "gupom" = "git pull --rebase origin $(git_main_branch)";
  # "gupomi" = "git pull --rebase=interactive origin $(git_main_branch)";
  # "glum" = "git pull upstream $(git_main_branch)";
  # "gluc" = "git pull upstream $(git_current_branch)";
  # "gwch" = "git whatchanged -p --abbrev-commit --pretty=medium";
  # "gwip" = "git add -A; git rm $(git ls-files --deleted) 2> /dev/null; git commit --no-verify --no-gpg-sign --message \"--wip-- [skip ci]\"";
  # "gam" = "git am";
  # "gamc" = "git am --continue";
  # "gams" = "git am --skip";
  # "gama" = "git am --abort";
  # "gamscp" = "git am --show-current-patch";
}
